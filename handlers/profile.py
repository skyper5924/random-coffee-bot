from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from keyboards.main_menu import main_menu_keyboard
from keyboards.profile_menu import profile_menu_keyboard
from utils.storage import load_users, save_user, load_topics
from states import Form
import re
from datetime import datetime

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "name"
@router.message(Form.name)
async def process_name(message: Message, state: FSMContext) -> None:
    await state.update_data(name=message.text)
    await state.set_state(Form.age)
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "age"
@router.message(Form.age)
async def process_age(message: Message, state: FSMContext) -> None:
    date_format = re.compile(r'^\d{2}\.\d{2}\.\d{4}$')
    if not date_format.match(message.text):
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.")
        return

    try:
        birth_date = datetime.strptime(message.text, '%d.%m.%Y')
    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.")
        return

    today = datetime.today()
    age = today.year - birth_date.year - ((today.month, today.day) < (birth_date.month, birth_date.day))

    if age < 1 or age > 100:
        await message.answer("–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100 –ª–µ—Ç.")
        return

    await state.update_data(age=str(age))
    await state.set_state(Form.city)
    await message.answer("–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "city"
@router.message(Form.city)
async def process_city(message: Message, state: FSMContext) -> None:
    await state.update_data(city=message.text)
    await state.set_state(Form.about_me)
    await message.answer("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "about_me"
@router.message(Form.about_me)
async def process_about_me(message: Message, state: FSMContext):
    await state.update_data(about_me=message.text)
    topics = load_topics()

    if topics:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text=topic)] for topic in topics],
            resize_keyboard=True
        )
        await message.answer("–ö–∞–∫–∞—è —Ç–µ–º–∞ —Ç–µ–±–µ –±–ª–∏–∂–µ –≤—Å–µ–≥–æ?", reply_markup=keyboard)
        await state.set_state(Form.topic)
    else:
        await message.answer("–¢–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", reply_markup=main_menu_keyboard)
        await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "topic"
@router.message(Form.topic)
async def process_topic(message: Message, state: FSMContext):
    topics = load_topics()
    selected_topic = message.text

    if selected_topic in topics:
        await state.update_data(topic=selected_topic)
        data = await state.get_data()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        user_data = {
            'name': data['name'],
            'age': data['age'],
            'city': data['city'],
            'bio': data['about_me'],
            'topic': selected_topic,
            'username': message.from_user.username,
            'status': 'active'
        }
        save_user(str(user_id), user_data)

        await message.answer("–°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞.", reply_markup=main_menu_keyboard)
        await state.clear()
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏–∑ —Å–ø–∏—Å–∫–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ú–æ—è –∞–Ω–∫–µ—Ç–∞"
@router.message(F.text == "üìÑ –ú–æ—è –∞–Ω–∫–µ—Ç–∞")
async def show_my_profile(message: Message, state: FSMContext):
    user_id = message.from_user.id
    users = load_users()

    if str(user_id) in users:
        user_data = users[str(user_id)]
        profile_text = (
            f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n"
            f"–ò–º—è: {user_data['name']}\n"
            f"–í–æ–∑—Ä–∞—Å—Ç: {user_data['age']}\n"
            f"–ì–æ—Ä–æ–¥: {user_data['city']}\n"
            f"–û —Å–µ–±–µ: {user_data['bio']}\n"
            f"–¢–µ–º–∞: {user_data.get('topic', '–Ω–µ –≤—ã–±—Ä–∞–Ω–∞')}"
        )
        await message.answer(profile_text, reply_markup=profile_menu_keyboard)
    else:
        await message.answer("–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∞–Ω–∫–µ—Ç—É. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!", reply_markup=ReplyKeyboardRemove())
        await state.set_state(Form.name)
        await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"
@router.message(F.text == "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
async def edit_profile(message: Message, state: FSMContext):
    user_id = message.from_user.id
    users = load_users()

    if str(user_id) in users:
        user_data = users[str(user_id)]
        await state.update_data(
            name=user_data['name'],
            age=user_data['age'],
            city=user_data['city'],
            about_me=user_data['bio']
        )
        await message.answer("–î–∞–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω–∏–º –≤–∞—à—É –∞–Ω–∫–µ—Ç—É. –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?", reply_markup=ReplyKeyboardRemove())
        await state.set_state(Form.name)
    else:
        await message.answer("–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!", reply_markup=ReplyKeyboardRemove())
        await state.set_state(Form.name)
        await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")