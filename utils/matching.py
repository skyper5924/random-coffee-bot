import logging
import random
from typing import List, Tuple
from utils.storage import load_users
from config import ADMIN_ID

def match_users() -> List[Tuple[str, str]]:
    users = load_users()
    pairs = []

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ç–µ–º–∞–º
    topics_dict = {}
    for user_id, user_data in users.items():
        if user_data.get('status', 'active') == 'active':
            topic = user_data.get("topic")
            if topic:
                if topic not in topics_dict:
                    topics_dict[topic] = []
                topics_dict[topic].append(user_id)

    # –ü–æ–¥–±–∏—Ä–∞–µ–º –ø–∞—Ä—ã –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
    for topic, user_ids in topics_dict.items():
        random.shuffle(user_ids)
        for i in range(0, len(user_ids) - 1, 2):
            pairs.append((user_ids[i], user_ids[i + 1]))
            logging.info(f"–ü–∞—Ä–∞: {user_ids[i]} ‚Üî {user_ids[i + 1]} (—Ç–µ–º–∞: {topic})")

        # –ï—Å–ª–∏ –≤ –≥—Ä—É–ø–ø–µ –Ω–µ—á—ë—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–µ–∑ –ø–∞—Ä—ã
        if len(user_ids) % 2 != 0:
            leftover_user = user_ids[-1]
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {leftover_user} –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ –ø–∞—Ä—ã (—Ç–µ–º–∞: {topic})")

    return pairs

async def notify_users(bot, pairs: List[Tuple[str, str]]):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ–± –∏—Ö –ø–∞—Ä–∞—Ö –∏ —Ç–µ–º–µ.
    –î–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–±–æ—Ç–µ –∏ —Ö–æ–±–±–∏.
    """
    users = load_users()
    success_count = 0
    fail_count = 0

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø–∞—Ä–∞–º–∏
    for user_id1, user_id2 in pairs:
        if user_id2 is not None:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            user1 = users[user_id1]
            user2 = users[user_id2]

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è user1
            await bot.send_message(
                chat_id=user_id1,
                text=(
                    f"üéâ –í–∞—à–∞ –ø–∞—Ä–∞ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é: {user2['name']}!\n"
                    f"–¢–µ–º–∞: {user2.get('topic', '–±–µ–∑ —Ç–µ–º—ã')}\n"
                    f"üíº –†–∞–±–æ—Ç–∞: {user2.get('work_place', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: {user2.get('work_description', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üéØ –•–æ–±–±–∏: {user2.get('hobbies', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É: @{user2.get('username', 'username_–Ω–µ_—É–∫–∞–∑–∞–Ω')}\n"
                    f"–î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ –≤—Å—Ç—Ä–µ—á–µ!"
                )
            )
            logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id1}")

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è user2
            await bot.send_message(
                chat_id=user_id2,
                text=(
                    f"üéâ –í–∞—à–∞ –ø–∞—Ä–∞ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é: {user1['name']}!\n"
                    f"–¢–µ–º–∞: {user1.get('topic', '–±–µ–∑ —Ç–µ–º—ã')}\n"
                    f"üíº –†–∞–±–æ—Ç–∞: {user1.get('work_place', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üìù –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: {user1.get('work_description', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"üéØ –•–æ–±–±–∏: {user1.get('hobbies', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                    f"–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É: @{user1.get('username', 'username_–Ω–µ_—É–∫–∞–∑–∞–Ω')}\n"
                    f"–î–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ –≤—Å—Ç—Ä–µ—á–µ!"
                )
            )
            logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id2}")

            success_count += 1

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–µ–∑ –ø–∞—Ä—ã
    all_users = set(users.keys())
    paired_users = set()

    for user_id1, user_id2 in pairs:
        paired_users.add(user_id1)
        if user_id2 is not None:
            paired_users.add(user_id2)

    leftover_users = all_users - paired_users

    for user_id in leftover_users:
        await bot.send_message(
            chat_id=user_id,
            text="üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –≤–∞–º –ø–∞—Ä—É. –ü–æ–ø—Ä–æ–±—É–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!"
        )
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Å—Ç–∞–ª—Å—è –±–µ–∑ –ø–∞—Ä—ã")
        fail_count += 1

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    if ADMIN_ID:
        await bot.send_message(
            chat_id=ADMIN_ID,
            text=f"–ü–æ–¥–±–æ—Ä –ø–∞—Ä –∑–∞–≤–µ—Ä—à—ë–Ω:\n–£—Å–ø–µ—à–Ω–æ: {success_count}\n–ù–µ —É–¥–∞–ª–æ—Å—å: {fail_count}"
        )
        logging.info(f"–û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {ADMIN_ID}")